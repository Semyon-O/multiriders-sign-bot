import asyncio
import logging
import pprint

import cachetools
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.storage.memory import MemoryStorage
from views import buttons
import aiogram.filters as filter

import config
from controllers import controllers
from router_path import show_info_program, request_for_yes, request_for_no


# settings to bot
logging.basicConfig(level=logging.INFO)
bot = Bot(token=config.telegram_bot)
dp = Dispatcher(storage=MemoryStorage())
cache_strategy = cachetools.TTLCache(maxsize=100, ttl=300)


@dp.message(filter.Command("start"))
async def welcome_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º! –•–æ—Ç–∏—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –±–ª–∏–∂–∞–π—à–∏–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏?",
                         reply_markup=buttons.draw_menu_button())


@dp.message(filter.Text(buttons.menus_dict["show programs"]))
async def show_programs(message: types.Message):
    program_list = controllers.get_all_programs()
    # pprint.pprint(program_list)
    await message.answer(text="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é—Å—è –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–æ–Ω—Å–∞",
                         reply_markup=buttons.draw_programs_button(program_list, "show_data"))


@dp.message(filter.Text(buttons.menus_dict["show contacts"]))
async def show_contacts(message: types.Message):
    text = (
        "–ë—ã—Ç—å –≤ –∫—É—Ä—Å–µ –ø—Ä–æ–≥—Ä–∞–º–º –∏ –Ω–æ–≤–æ—Å—Ç–µ–π:\n\n"
        "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –≤ WA –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π: <a href='https://chat.whatsapp.com/J3UzX8kN61QDURI6oO0sK8'>–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è</a>\n"
        "‚Ä¢ –ö–∞–Ω–∞–ª –≤ TG: <a href='https://t.me/multiriders_camp'>–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è</a>\n"
        "‚Ä¢ –ú—ã –≤–æ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ: <a href='https://vk.com/multiriders'>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –ø—Ä–æ–≥—Ä–∞–º–º, –≤–∏–¥–µ–æ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ</a>\n"
        "‚Ä¢ –í –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏:<a href='https://t.me/multiriders_camp'>–≤ —Ä–µ–∂–∏–º–µ online</a>\n"
        "‚Ä¢ –ù–∞—à —Å–∞–π—Ç: <a href='https://www.multiriders.com'>—Å—Å—ã–ª–∫–∞</a>\n\n"
        "üìû <a href='https://t.me/MikhailStep'>–ú–∏—Ö–∞–∏–ª</a> –æ—Ñ–∏—Å, +7 (911) 909-21-12\n"
        "üìû –ê–Ω–∞—Å—Ç–∞—Å–∏—è, +7 (921) 392-28-83\n"
    )
    formatted_text = text
    await message.answer(
        text=formatted_text,
        disable_web_page_preview=True,
        parse_mode="HTML"
    )


@dp.message(filter.Text(buttons.menus_dict["make request"]))
async def show_contacts(message: types.Message):
    program_list = controllers.get_all_programs()
    await message.answer(text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É:",
                         reply_markup=buttons.draw_programs_button(program_list, "start_form"))


async def main():
    # connecting routes
    dp.include_router(show_info_program.router)
    dp.include_router(request_for_yes.router)
    dp.include_router(request_for_no.router)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())