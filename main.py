import asyncio
import logging

import cachetools
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from views import buttons
from airtable_table import tables
from airtable_table import config as acf
import aiogram.filters as filter
from cachetools import cached

import config
from router_path import show_info_program, request_for_yes, request_for_no


# settings to bot
logging.basicConfig(level=logging.INFO)
bot = Bot(token=config.telegram_bot)
dp = Dispatcher(storage=MemoryStorage())
cache_strategy = cachetools.TTLCache(maxsize=100, ttl=300)

# connecting routes
dp.include_router(show_info_program.router)
dp.include_router(request_for_yes.router)
dp.include_router(request_for_no.router)


@dp.message(filter.Command("start"))
async def welcome_start(message: types.Message, state: FSMContext):
    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –ø–æ–µ–∑–¥–∫–∏ –≤ –ª–∞–≥–µ—Ä—å. \n"
                         "–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ–Ω–∞ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è. –í—ã —Å–º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—á–∞—Å—Ç–∏–µ",
                         reply_markup=buttons.draw_menu_button())


@cached(cache=cache_strategy)
def get_all_programs():
    programs = tables.ProgramsTable(acf.base_token, acf.api_token)
    all_programs = programs.get_all_programs()
    program_list = {}
    for program in all_programs:
        program_list[program["id"]] = program["fields"]["–ù–∞–∑–≤–∞–Ω–∏–µ_–ø—Ä–æ–≥—Ä–∞–º–º—ã"]

    return program_list


@dp.message(filter.Text(buttons.menus_dict["show programs"]))
async def show_programs(message: types.Message, state: FSMContext):
    program_list = get_all_programs()

    await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ "
                              "–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–µ–π:",
                         reply_markup=buttons.draw_programs_button(program_list))


@dp.message(filter.Text(buttons.menus_dict["show contacts"]))
async def show_contacts(message: types.Message):
    await message.answer(text="–í—ã –º–æ–∂–µ—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –Ω–∞–º–∏ –∏ –æ—Å—Ç–∞–≤–∞—Ç—å –≤ –∫—É—Ä—Å–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –≤ –Ω–∞—à–∏—Ö —Å–æ—Ü —Å–µ—Ç—è—Ö. \n\n"
                              "1. –ü–æ —Å—Å—ã–ª–∫–µ –º–æ–∂–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–º—É –∫–∞–Ω–∞–ª—É –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π."
                              "–ê–Ω–æ–Ω—Å—ã –Ω–æ–≤—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º, –≤—ã–µ–∑–¥–æ–≤, —Ñ–æ—Ç–æ–æ—Ç—á–µ—Ç—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ - https://chat.whatsapp.com/J3UzX8kN61QDURI6oO0sK8 \n"
                              "2. –ú—ã –í–∫–æ–Ω—Ç–∞–∫—Ç–µ - —Ñ–æ—Ç–æ–æ—Ç—á–µ—Ç—ã —Å –ø—Ä–æ–≥—Ä–∞–º–º vk.com/multiriders \n"
                              "3. –ò–Ω—Å—Ç–∞–≥—Ä–∞–º–º - —Å–æ–±—ã—Ç–∏—è –≤ —Ä–µ–∂–∏–º–µ –æ–Ω–ª–∞–π–Ω https://www.instagram.com/multiriders_camp/ \n"
                              "4. –¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª - https://t.me/multiriders_camp \n\n"
                              "üìû –ú–∏—Ö–∞–∏–ª (–æ—Ñ–∏—Å): +7 (911) 909-21-12 \n"
                              "üìû –ê–Ω–∞—Å—Ç–∞—Å–∏—è: +7 (921) 392-28-83")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())